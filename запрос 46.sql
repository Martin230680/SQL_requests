/*Получите из таблицы products8 все джинсы и юбки компании Mango.*/

SELECT * FROM products8
WHERE MATCH (`name`) AGAINST ('+джинс* +Mango' IN BOOLEAN MODE) OR MATCH(`name`) AGAINST ('+юбк* +Mango' IN BOOLEAN MODE);

/*Нормальная температура колеблется в пределах от -10 до +10 градусов включительно.
Если температура выходит за эти пределы в любую из сторон, то она считается критической.

Выведите эксперименты с критической температурой.
В итоговой таблице нужно оставить только номер эксперимента (id) и абсолютное значение температуры (temperature).*/

SELECT id, ABS(temperature) FROM experiments
WHERE temperature < -10 OR temperature > 10;

/*В таблице films содержится информация о фильмах: id, рейтинг, год выпуска и количество голосов. Получите название фильма, 
а также его рейтинг округленный до 2 знаков после запятой (например 4.34).
Отсортируйте результаты в порядке убывания рейтинга и оставьте только 5 записей.
Поле с округленным рейтингом должно называться rating.*/
SELECT id,ROUND(rating,2) AS rating,`year`,votes FROM films ORDER BY rating DESC LIMIT 5;

/*Для удобства покупателей, в продуктовом магазине решили округлять суммы в чеках в сторону покупателей. 
Если стоимость товаров получилась в 250 рублей 74 копейки, то в чеке будет 250 рублей ровно.

Получите из таблицы bills id чека и также конечную сумму в чеке.
Колонку с конечной ценой назовите final_amount.
При расчете учитывайте персональную скидку покупателя. То есть сперва нужно уменьшить базовую цену (amount) 
на величину скидки, а после вычислить конечную сумму (final_amount).
Величина скидки задана в процентах.*/

SELECT id, TRUNCATE((amount-amount*personal_sale/100),0) AS final_amount
FROM bills;



