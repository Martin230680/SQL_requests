/*Получите из таблицы products3 имена и цены всех товаров, у которых длина имени от 5 до 10 символов включительно.
Отсортируйте данные по имени в алфавитном порядке.*/

SELECT `name`, price FROM products3
WHERE (CHAR_LENGTH(`name`)>5) AND (CHAR_LENGTH(`name`)<10) ;
/*
В таблице passports1 хранятся данные о паспортах пользователей. Серия и номер паспорта хранятся в отдельных строковых столбцах.
Получите из таблицы идентификатор пользователя и его паспорт в формате SSSSNNNNNN, где SSSS — серия,
а NNNNNN — номер).
Итоговый номер паспорта должен иметь название passport.
Данные отсортируйте по id пользователя.*/

/*
В таблице passports1 содержатся данные о паспортах пользователей. Серия и номер паспорта 
хранятся в отдельных целочисленных столбцах, что облегчает сортировку, но затрудняет вывод данных.
Например, если мы выполним запрос:
SELECT user_id, CONCAT_WS(" ", series, number) as passport FROM passports1;
То для серии равной «21» и номера равному «81400» получим «21 81400».
Однако при выводе длина серии должна составлять 4 символа, а длина номера — 6 символов.
Измените исходный запрос так, чтобы короткие серии и номера получили лидирующие нули:
вместо «21 81400» должно выводиться «0021 081400».
Данные отсортируйте сперва по серии, а потом по номеру.*/

/* вставить в этот же запрос 
 итог full_passport */

SELECT *,
CONCAT (series,`number`) AS passport,
CONCAT_WS(' ',LPAD(series,4,'0'),LPAD(`number`,6,'0')) AS full_passport 
FROM passports1 ORDER BY series,`number`;

/*Получите из таблицы users номер пользователя, а также его Фамилию Имя 
Отчество разделенные пробелами в одном столбце. Имя результирующего столбца — name.
Данные должны быть отсортированы в алфавитном порядке сперва по фамилии, затем по имени и отчеству.
Выводить нужно только тех пользователей, у которых есть отчество.
*/

SELECT * , CONCAT_WS(' ',first_name,last_name,patronymic) AS `name` FROM users8
WHERE CHAR_LENGTH(patronymic)<>0
ORDER BY last_name,first_name,patronymic;

/*Получите из таблицы users всех пользователей от 18 лет и старше с фамилией, 
заканчивающейся на «ова». Отсортируйте результаты по возрасту, а затем по фамилии.
*/

SELECT * FROM users9 WHERE age>=18 and RIGHT(last_name,3)='ова'
ORDER BY age,last_name;
/*В таблице users в поле passport хранятся данные о паспорте пользователя в символьном формате.
 В одном поле хранится и серия (первые 4 цифры) и номер, последние 6 цифр. Если у пользователя нет 
 паспорта, то ничего не содержит — NULL.
Получите id пользователя, а также раздельно серию паспорта и его номер. Серия должна быть в 
колонке series, а номер в колонке number.

Пользователей без паспорта исключите.*/


SELECT *, LEFT (passport,4) AS series, RIGHT(passport,6) AS `number` from users10 WHERE passport IS NOT NULL;


/*В таблице products хранятся данные о товарах в компании. Во время внесения данных, 
менеджеры часто вставляли пробелы до и после названий. 
Обновите имена продуктов так, чтобы в начале и в конце имен не было пробелов.
*/
SELECT *, TRIM(`name`) AS correct_name FROM products9;

/*
В таблице domains содержится список доменных имен. Некоторые домены оканчиваются на точку, например (google.com.). 
Обновите таблицу так, чтобы доменные имена не заканчивались точкой.*/

SELECT *, TRIM(TRAILING '.' from domains) as correct FROM domains1;

