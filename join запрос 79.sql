/*CREATE TABLE authors(
id	INT,
first_name VARCHAR(50),
last_name VARCHAR(50)
);
INSERT INTO authors(id,	first_name,	last_name)
VALUES
(1,'	Джулиан','	Барнс'),
(2,'	Роман','	Сенчин'),
(3,'	Джон Рональд Руэл','	Толкин'),
(4,'	Марк','	Лутц'),
(5,'	Поль','	Дюбуа'),
(6,'	Джереми','	Заводны'),
(7,'	Илзе','	Лиепа'),
(8,'	Джоэл','	Спольски'),
(9,'	Шэри','	Тероу'),
(10,'	Оксана','	Путан'),
(11,'	Робин','	Вильямс'),
(12,'	Ларри	','Ульман');
*/
/*
CREATE TABLE books1(
id	INT,
name VARCHAR(50),
price INT,
author_id int
);*/
/*
INSERT INTO books1(id,`name`,price,	author_id)
values
(1,'Одна история',390,1),
(2,'Изучаем Python, 4-е издание',2430,4),
(3,'Дизайн для НЕдизайнеров (PDF)',190,11),
(4,'Дождь в Париже',476	,NULL),
(5,'Джоэл о программировании',650,8),
(6,'Программируем коллективный разум',1100,9),
(7,'MySQL. Сборник рецептов',1800,	NULL),
(8,'Книга утраченных сказаний. Часть Первая',597,3),
(9,'Кулинарная книга моей бабушки',470,10),
(10,'MySQL. Оптимизация производительности',1700,6),
(11,'Властелин Колец. Трилогия',1200,3),
(12,'Театральные сказки',1196,7);*/
/*
Получите полный список книг и писателей. По возможности свяжите книги с авторами, 
которые их написали. Учитывайте, что некоторые книги не имеют авторов, а для некоторых авторов,
наоборот, не указаны книги. Соответственно в финальной таблице могут быть авторы без книг 
и книги без авторов.

Выведите 5 столбцов:
    1. author_id — id автора, NULL для книг, у которых автор не указан;
    2. book_id — id книги, которую написал автор, NULL — если у автора нет книг;
    2. last_name — фамилия автора;
    2. first_name — имя автора;
    2. name — название книги.

Данные отсортируйте сперва по id авторов, а затем по id книг.*/

SELECT a.id AS `id автора`, b1.id AS `id книги`, a.last_name AS `Фамилия`, a.first_name AS `Имя`, b1.`name` AS `название книги`
FROM authors AS a
LEFT JOIN books1 AS b1
ON a.id=b1.author_id
UNION 
SELECT a.id AS `id автора`, b1.id AS `id книги`, a.last_name AS `Фамилия`, a.first_name AS `Имя`, b1.`name` AS `название книги`
FROM authors AS a
left JOIN books1 AS b1
ON a.id=b1.author_id;

